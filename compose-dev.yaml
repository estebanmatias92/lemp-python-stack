name: python-stack
services:
  app:
    build:
      context: ./app
      target: development
      args:
        - USERNAME=${USER:?error}
        - PROJECT_ROOT=${PROJECT_ROOT:?error}
    working_dir: $PROJECT_ROOT
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db                        # Nombre del servicio (tambien IP) que tiene sirve la DB
      - DB_NAME=${DB_NAME}                # Nombre de la base de datos a la que entrar
      - DB_USER=user                      # El usuario de para entrar en la DB
      - DB_PASS=/run/secrets/db-user-pass # Info from the directory where secrets are stored
    depends_on:
      db:
        condition: service_healthy
        restart: true
    pull_policy: build
    secrets:
      - db-user-pass
    develop:
      watch:
        - action: sync
          path: ./app
          target: $PROJECT_ROOT
      #  - action: rebuild
      #    path: ./requirements.txt

  db:
    image: mysql:5.7
    restart: always
    expose:
      - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-root-pass # Info from the directory where secrets are stored
      - MYSQL_DATABASE=${DB_NAME}         # Nombre de la base de datos 
      - MYSQL_USER=user                   # El usuario de para entrar en la DB
      - MYSQL_PASSWORD_FILE=/run/secrets/db-user-pass
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql # Info from the directory where secrets are stored
      - db-data:/var/lib/mysql
    secrets:
      - db-root-pass
      - db-user-pass
    healthcheck:
      # Test the status of MySQL
      #test: ["CMD-SHELL", "mysqladmin ping -h localhost"] # Enter mysqladmin as root without password
      #test: ["CMD-SHELL", "mysqladmin --user=$$MYSQL_USER --password=$(cat $$MYSQL_PASSWORD_FILE) ping -h localhost"] # Enter mysqladmin with non-root user with password secret
      #test: ["CMD-SHELL", "mysqladmin -h 127.0.0.1 ping --password=$(cat $$MYSQL_ROOT_PASSWORD_FILE) | grep 'mysqld is alive' || exit 1"]
      test: ["CMD-SHELL", "mysql --user=$$MYSQL_USER --password=$(cat $$MYSQL_PASSWORD_FILE) --execute=\"SHOW DATABASES;\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      #start_period: 20s  
    #develop:
    #  watch:
    #    - action: sync+restart
    #      path: ./db/init.sql
    #      target: /docker-entrypoint-initdb.d/init.sql

volumes:
  db-data:

secrets:
  db-root-pass:                           # The secret will be mounted here
    file: ./db/db-root-pass.example.txt   # This secret
  db-user-pass:
    file: ./db/db-user-pass.example.txt