services:
  web:
    build:
      context: ./web
      target: development
      args:
        - PROJECT_DIR=${PROJECT_DIR:?error}
    stdin_open: true
    tty: true
    secrets:                                # Using shared secret
      - db-user-pass
    volumes:
      - ./web:${PROJECT_DIR}
    environment:
      - DB_HOST=db                          # Nombre del servicio (tambien IP) que tiene sirve la DB
      - DB_NAME=${DB_NAME}                  # Nombre de la base de datos a la que entrar
      - DB_USER=user                        # El usuario de para entrar en la DB
      - DB_PASS=/run/secrets/db-user-pass   # Info from the directory where secrets are stored
    expose:                                 # Exposing port to stack's network
      - "8000"
    pull_policy: build
    depends_on:
      db:
        condition: service_healthy
        restart: true

  proxy:                                          # Proxy service to serve static files faster, bypassing dynamic content to the web server
    image: nginx:latest
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - web

  db:
    image: mysql:8.4
    restart: unless-stopped
    command: --mysql-native-password=ON
    secrets:                                                  # Info from the directory where secrets are stored
      - db-root-pass
      - db-user-pass
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql    
      - db-data:/var/lib/mysql                                # Persisting stored data outside service's life-cycle
    environment:
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-root-pass    # Info from the directory where secrets are stored
      - MYSQL_DATABASE=${DB_NAME}                             # Nombre de la base de datos 
      - MYSQL_USER=user                                       # El usuario de para entrar en la DB
      - MYSQL_PASSWORD_FILE=/run/secrets/db-user-pass
    expose:
      - "3306"
    healthcheck:
      # Test the status of MySQL
      test: ["CMD-SHELL", "mysql --user=$$MYSQL_USER --password=$(cat $$MYSQL_PASSWORD_FILE) --execute=\"SHOW DATABASES;\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      # start_period: 20s  
    #develop:
    #  watch:
    #    - action: sync+restart
    #      path: ./db/init.sql
    #      target: /docker-entrypoint-initdb.d/init.sql   # Do you want to restart the service on .sql file change?

volumes:
  db-data:

secrets:
  db-root-pass:                           # The secret will be mounted here
    file: ./db/db-root-pass.example.txt   # (This secret)
  db-user-pass:                           # and here...
    file: ./db/db-user-pass.example.txt   # another secret